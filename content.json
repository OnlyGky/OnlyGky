{"meta":{"title":"OnlyGky的博客","subtitle":"OnlyGky的博客","description":"OnlyGky的博客","author":"John Doe","url":"https://onlygky.github.io","root":"/"},"pages":[{"title":"关于","date":"2020-12-15T07:49:04.658Z","updated":"2020-12-15T07:48:43.769Z","comments":false,"path":"about/index.html","permalink":"https://onlygky.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"友情链接","date":"2020-12-15T06:07:04.442Z","updated":"2020-12-15T06:06:34.322Z","comments":true,"path":"links/index.html","permalink":"https://onlygky.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-12-15T08:15:17.594Z","updated":"2020-12-15T08:15:17.594Z","comments":false,"path":"tags/index.html","permalink":"https://onlygky.github.io/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-12-15T08:14:07.893Z","updated":"2020-12-15T08:13:29.186Z","comments":false,"path":"categories/index.html","permalink":"https://onlygky.github.io/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2020-12-15T05:41:54.041Z","updated":"2020-12-15T05:41:54.040Z","comments":false,"path":"repository/index.html","permalink":"https://onlygky.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"OnlyGky--一名服务端开发工程师的校招面经总结","slug":"OnlyGky-一名服务端开发工程师的校招面经总结","date":"2021-01-02T11:20:59.000Z","updated":"2021-01-03T09:04:21.878Z","comments":true,"path":"posts/65cb4ea4.html","link":"","permalink":"https://onlygky.github.io/posts/65cb4ea4.html","excerpt":"","text":"前言：Gk作为一名21年大学毕业的Java服务端开发工程师，从19年10月份(大三上)开始进行日常实习面试，期间获得小米、快手、领英、Tencent等offer，因疫情爆发无法准时入职，20年3月份春招成功进入Tencent实习(20.03-20.09)，Tencent转正答辩完后进行秋招(20.09-20.11)，最后成功获得腾讯(大sp)，阿里(大白菜)，快手(大sp)等offer，综合各方面原因选择了回归老东家Tencent。整个求职期间共经历了将近50次面试，在这里将自己的个人面经综合总结一下，希望能够帮助到面试的小伙伴们！ 操作系统1. 进程、线程、协程123451. 进程和线程的区别？一个进程中有两个线程a，b，a线程出现算数异常，请问ab的状态是怎么样？ 2. 协程的实现原理3. 线程通信的方法，管道是不是有序的，消息队列是怎么实现的？4. 信号量是什么5. 线程共享了进程什么东西 2. 同步、异步12341. 同步、异步的区别，优缺点 2. io多路复用，NIO模型3. epoll和select的区别4. AIO NIO BIO 的区别 3.内存1234561. Linux共享内存是怎么实现的2. Linux的内存管理是怎么实现的？3. 在一个文件中找一个字符串是基于什么原理4. 文件管理怎么找到制定文件？写文件是先刷新磁盘还是内存？5. 虚拟内存的三个特性6. Linux怎么查看系统的状态，怎么查看线程状态 并发1234567891011121314151617181. 死锁，死锁的产生条件，死锁的预防， 乐观锁悲观锁，优缺点2.线程池的实现原理，线程池的参数，线程池的执行过程，拒绝策略3. Lock和Sychronized的区别4. sleep与wait的区别5. Sychronized的实现原理，锁静态方法，代码库，普通方法的区别6. volatile的原理7. Java创建线程有几种方法？8. 线程不安全的概念9. ThreadLocal的作用和使用场景10. 讲讲cas11. Java如何让三个线程同一时间并发执行？12. Java线程间的通信方式13. AtomicInteger的实现原理14. 设计让线程先并发执行几个任务，再串行执行15. 锁的降级升级16. 讲讲互斥锁，使用互斥锁实现读写锁17. 锁是锁在堆还是栈，为什么不是栈？18. 并发集合有哪些？ JVM虚拟机12345678910111213141516171. 线程CPU占用率较高，怎么定位到具体是哪一行代码？2. Java的垃圾收集，调用System.gc()后会进行垃圾收集吗？3. 什么时候进行垃圾收集(新生代+老年代)？垃圾清除算法有哪几种，优缺点？新生代为什么用复制算法？垃圾收集器4. 虚拟机的内存划分5. string存储在内存中是怎么存储的6. Java线程模型（多对一，一对多，多对多等）7. 类加载机制8. Java的平台无关是怎么实现的？jdk8有方法区吗？没有的原因？9. 内存溢出问题的定位与排查，根据什么指标排查的？排查过程是怎么样的？10. 了解寄存器吗？11. 怎么自定义一个类加载器？12. JVM参数调优13. jvm频繁的full gc该怎么解决？14. 双亲委派模型，还了解其他模型吗？15. 什么时候会栈溢出？static修饰的变量会栈溢出吗16. 虚拟机内存溢出(Stackoverflowerror &amp; outofMemoryError)和内存泄漏17. 对象的内存分配？什么时候对象会进入老年待？ Java基础1. 集合12345671. HashTable和HashMap和ConcurrentHashMap查找速度，各自区别2. ArrayList和LinkedList的对比3. HashMap长度为8转化为为红黑树，6转化为链表的原因4. HashMap.get()的时间复杂度是多少5. HashMap的hash值是怎么得到的6. ConcurrentHashMap怎么保证安全，size怎么计算的？分段锁的维度？扩容机制7. 迭代器是怎么用的， 原理 2. 基础123456789101112131415161718191. float a &#x3D;3.14 正确吗？该如何修改？2. switch可以存什么类型3. char可以存储汉字吗4. 短路与和逻辑与的区别5. 序列化是什么6. int有几个字节？在32位和64位有什么区别？char有几个字节7. &#x3D;&#x3D;和equal的区别8. equal与hashcode重写9. Java是值传递还是引用传递，String呢？10. C语言中struct和union的区别11. jdk8的新特性，新的优点12. new一个字符串有几个变量产生？一定是两个吗？13. jdbc连接的步骤，事务开启14. 动态规划的实现15. lambam表达式的理解16. final 底层原理，作用17. String能不能被继承18. 浅拷贝和深拷贝的区别19. java启动有哪几种方式，参数有哪几种？分别是什么意思？ 3. 设计模式1234561. 单例模式（懒汉，饿汉）2. 工厂模式3. 责任链模式4. 观察者模式5. 适配器模式 框架1. SpringBoot &amp; Spring1234561. 为什么要有SpringBoot？2. Spring的Bean的生命周期3. Spring的特性4. Spring的IOC是怎么实现的5. springboot的@SpringBootApplication是怎么实现类加载的6. Spring AOP的实现原理 2. SpringMVC12341. springmvc拦截器的实现2. SpringMVC的执行流程3. 讲讲springmvc常用的五个注解 3. Mybatis121. #和$的区别2. mybatis的缓存 数据库1. Mysql1234567891011121. Mysql存储引擎的区别 2. ACID具体是什么，原子性场景的具体举例，一致性是怎么实现的？3. 聚集索引与非聚集索引的实现4. Mysql索引什么场景加？什么时候会失效？索引的优缺点？实现原理(b+树)，不使用B树和hash的原因，覆盖索引是怎么实现的？5. 关系性与非关系性数据库的区别6. 主键与外键的区别7. sql优化等方法，具体场景8. 左连接和内连接的区别9. 事务是什么？特性？隔离级别，带来的问题10. 讲讲MVCC，间隙锁11. group by常与什么搭配使用12. 使用sql书写：获取一个班级排名第三，性别为男的所有的信息 2. Redis12345671. 为什么要有Redis2. 缓存击投是什么？怎么解决？3. 消息队列是怎么实现的？4. Redis的基本数据结构，zset的实现原理，跳表时间复杂度？间隔改变了时间复杂度会不会改变？5. Redis持久化方式（RDB，AOF讲详细，RDB是将所有数据同步回硬盘吗）6. Redis用在什么场景？有哪几种基本类型？与数据库数据不一致该怎么解决？7. 在Redis集群中使用上百万个数据，应该怎么查找一些数据 网络1. TCP&amp;UDP123451. 详细TCP与UDP，TCP的可靠性是怎么实现的？2. TCP第三次握手失败客户端和服务端分别会出现什么情况？3. TCP拥塞控制4. TCP的三次握手5. Tcp数据完整性，怎么确认数据的完整性？怎么确认一个TCP连接断开（四次挥手） 2. 其他12345678910111. 网络七层模型：作用，协议，五层模型2. DNS递归和迭代的区别3. HTTP协议4. ping的实现原理5. cookie和Session的区别，Session的创建过程6. GET和POST的区别7. HTTP和TCP的区别,为什么有了HTTP还要有TCP？8. HTTP的状态码9 转发与重定向的区别10. 在浏览器输入url会发生什么11. Http和Https的区别，Http数据完整性怎么保证 分布式123451. 分布式事务的实现原理2. zookeeper的作用，选举机制，数据同步机制3. 一致性hash的实现原理4. Nginx负载均衡的实现原理，具体算法5. 服务治理是怎么实现的 Git&amp;Maven12341. git常用命令2. maven版本冲突该怎么解决3. git操作：rebase，pick4. maven和gradle 数据结构1. 大数据场景12345671. 10亿数据是怎么实现存储的，字符串hash是怎么实现的？映射原理？2. 100亿数据找出一千个最大的数，博主答了堆，堆的时间复杂度，还有别的方法吗？二分3. 在开头为187的上亿个电话号码中除去重复的，限定在一个500兆的文件中操作？4. 给定a、b两个文件，各存放50亿个url，每个url各占64字节，内存限制是4G，让你找出a、b文件共同的url5. 求两个数组的交集，大数据量6. 10个g的文件数据，怎么按出现请求次数从高到低排序7. 一个100w行的文件怎么查看第四列的值？ 2. 基本算法1234567891011121314151617181920212223242526272829303132331. 快速找出两个数组中相同的数2. 反转链表+变量名驼峰转换3. 二叉树的遍历方法4. 深度和广度，深度和广度分别对应栈和队列的什么5. 字符串中的最长回文子串6. 百分之六十的人喜欢篮球，70喜欢足球，80喜欢排球，求同时喜欢足球和篮球的概率7. 红黑色与b+树的查找删除效率8. 抛硬币计算概率问题，轮流抛谁先抛到正面谁赢？9. 找到无序数组中最小的k个数（二分）10. 求出有序数组的平方个数11. 了解哪些加密算法12. 冒泡的时间复杂度是多少？时间复杂度该怎么算？13. 数据结构由什么组成(三大特性)14. 快排原理，时间复杂度15. 求数组的最大异或数16. 赛马问题17. 实现一个抽奖系统18. 哈夫曼树怎么求路径之和19. 找出一组字符串中重复且只出现一次的字符串20. 堆排序的实现原理21. 爬楼梯22. leetcode1054条形码23. 判断包含括号的字符串是否有效24. 给定一个循环递增数组a[]，有n个元素，如a[]&#x3D;&#123; 10, 13, 16, 20, 25, 2, 5, 8&#125;，给定一个元素num，找出可以把num插入到数组a[]中的位置，让插入num后的a[]仍然是循环递增的25. 实现一个字符串反转26. 写一个将两个二进制字符串相加的函数27. 反转链表28. 链表中删除所有相同的节点29. 如何确定一个链表是否有环30. 用数组实现栈31. 两个递增数组找出第k小的数32. 翻转数组找到其中一个数的下标 其他123456789101112131. Tomcat调优2. 项目的具体架构，访问量3. 项目中订单模块的实现4. 项目中消息通知模块的实现5. 项目中那个地方用到线程池6. 单体架构的瓶颈(cpu, io, 带宽)与如何优化，为什么访问量多了会占据cpu资源7. uml有哪几种图？用例图有什么特点？转化为类图有哪那个步骤？8. 开发模型有哪几种？瀑布开发模型有哪几个过程？9. 单点登录的实现，与移动端配合使用过吗？10. 简单实现下单扣库存的代码 高并发，解决库存超卖11. 讲一下项目的数据库架构12. cpu大端序小端序13. 前后端分离是什么","categories":[{"name":"服务端开发","slug":"服务端开发","permalink":"https://onlygky.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://onlygky.github.io/tags/Java/"},{"name":"个人","slug":"个人","permalink":"https://onlygky.github.io/tags/%E4%B8%AA%E4%BA%BA/"}]},{"title":"在Linux中快速找到文件的几种方法","slug":"在Linux中快速找到文件的几种方法","date":"2020-12-21T05:22:08.000Z","updated":"2020-12-21T06:20:29.347Z","comments":true,"path":"posts/25823baf.html","link":"","permalink":"https://onlygky.github.io/posts/25823baf.html","excerpt":"","text":"本文主要用于介绍几种Linux常用的查找文件的方法 1. findfind命令是Linux在查找文件所在位置时最常使用的命令之一，一般是直接通过文件名进行查询所在位置。 1[root@localhost ~]# find 搜索路径 [选项] 搜索内容 在进行搜查的时候，主要有以下三种选项，其中前两种是我们使用比较多的 123-name: 按照文件名搜索；-iname: 按照文件名搜索，不区分文件名大小；-inum: 按照 inode 号搜索； 例如在当前目录下查找我所想要的application.js,，可以看到该文件是在js目录下，-iname选项的用法也是类似的 123456789101112131415161718GENGKAIYU-MB0:public onlyone$ ls -rlttotal 32drwxr-xr-x 3 onlyone staff 96 12 17 16:20 linksdrwxr-xr-x 3 onlyone staff 96 12 17 16:20 aboutdrwxr-xr-x 3 onlyone staff 96 12 17 16:20 tags-rw-r--r-- 1 onlyone staff 110 12 17 16:20 baidusitemap.xml-rw-r--r-- 1 onlyone staff 1280 12 17 16:20 content.jsondrwxr-xr-x 3 onlyone staff 96 12 17 16:20 categoriesdrwxr-xr-x 3 onlyone staff 96 12 17 16:20 repository-rw-r--r-- 1 onlyone staff 898 12 17 16:20 sitemap.xmldrwxr-xr-x 5 onlyone staff 160 12 17 16:20 images-rw-r--r-- 1 onlyone staff 3285 12 17 16:20 favicon.pngdrwxr-xr-x 7 onlyone staff 224 12 17 16:20 fontsdrwxr-xr-x 9 onlyone staff 288 12 17 16:20 jsdrwxr-xr-x 4 onlyone staff 128 12 17 16:20 cssGENGKAIYU-MB0:public onlyone$ find ./ -name application.js.//js/application.jsGENGKAIYU-MB0:public onlyone$ 但是find命令是必须要求完全匹配的，当你想要使用正则表达式的时候会出现如下错误(这个问题当文件与搜索目录在同一级时会出现) 12GENGKAIYU-MB0:js onlyone$ find .&#x2F; -name app*find: application.min.js: unknown primary or operator 在这种情况下可以通过在如下方法进行解决 12345678910//切换到上级目录 GENGKAIYU-MB0:public onlyone$ find ./ -name app*.//js/application.min.js.//js/application.js//在搜索内容前加上引号GENGKAIYU-MB0:js onlyone$ find ./ -name &#x27;app*&#x27;.//application.min.js.//application.js 2. which &amp; whereis这两个命令更多的倾向于一些可执行的命令或文件which其实查找的是每个Linux系统Path目录下的可执行文件 12345678910111213141516171819202122232425262728&#x2F;&#x2F;先查看我的PATH变量GENGKAIYU-MB0:gblog onlyone$ echo $PATH&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;bin:&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;go&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;go&#x2F;bin:&#x2F;Users&#x2F;onlyone&#x2F;Downloads&#x2F;apache-maven-3.6.3&#x2F;binGENGKAIYU-MB0:gblog onlyone$ ls -lrt &#x2F;usr&#x2F;local&#x2F;bin&#x2F;total 8lrwxr-xr-x 1 onlyone admin 28 3 31 2020 brew -&gt; &#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;bin&#x2F;brewlrwxr-xr-x 1 onlyone admin 30 3 31 2020 telnet -&gt; ..&#x2F;Cellar&#x2F;telnet&#x2F;63&#x2F;bin&#x2F;telnetlrwxr-xr-x 1 onlyone admin 37 4 2 2020 corkscrew -&gt; ..&#x2F;Cellar&#x2F;corkscrew&#x2F;2.0&#x2F;bin&#x2F;corkscrewlrwxr-xr-x 1 onlyone admin 38 4 2 2020 pcre2-config -&gt; ..&#x2F;Cellar&#x2F;pcre2&#x2F;10.34&#x2F;bin&#x2F;pcre2-configlrwxr-xr-x 1 onlyone admin 35 4 2 2020 pcre2grep -&gt; ..&#x2F;Cellar&#x2F;pcre2&#x2F;10.34&#x2F;bin&#x2F;pcre2greplrwxr-xr-x 1 onlyone admin 35 4 2 2020 pcre2test -&gt; ..&#x2F;Cellar&#x2F;pcre2&#x2F;10.34&#x2F;bin&#x2F;pcre2testlrwxr-xr-x 1 onlyone admin 28 4 2 2020 git -&gt; ..&#x2F;Cellar&#x2F;git&#x2F;2.26.0&#x2F;bin&#x2F;gitlrwxr-xr-x 1 onlyone admin 38 4 2 2020 git-cvsserver -&gt; ..&#x2F;Cellar&#x2F;git&#x2F;2.26.0&#x2F;bin&#x2F;git-cvsserverlrwxr-xr-x 1 onlyone admin 41 4 2 2020 git-receive-pack -&gt; ..&#x2F;Cellar&#x2F;git&#x2F;2.26.0&#x2F;bin&#x2F;git-receive-packlrwxr-xr-x 1 onlyone admin 34 4 2 2020 git-shell -&gt; ..&#x2F;Cellar&#x2F;git&#x2F;2.26.0&#x2F;bin&#x2F;git-shelllrwxr-xr-x 1 onlyone admin 43 4 2 2020 git-upload-archive -&gt; ..&#x2F;Cellar&#x2F;git&#x2F;2.26.0&#x2F;bin&#x2F;git-upload-archivelrwxr-xr-x 1 onlyone admin 40 4 2 2020 git-upload-pack -&gt; ..&#x2F;Cellar&#x2F;git&#x2F;2.26.0&#x2F;bin&#x2F;git-upload-pack-rwxr--r-- 1 onlyone staff 3754 4 2 2020 idealrwxr-xr-x 1 root admin 42 4 10 2020 bf -&gt; &#x2F;usr&#x2F;local&#x2F;bifrost&#x2F;bin&#x2F;bifrostClient.1.0.0lrwxr-xr-x 1 root admin 41 4 10 2020 bfAgent -&gt; &#x2F;usr&#x2F;local&#x2F;bifrost&#x2F;bin&#x2F;bifrostAgent.1.0.0lrwxr-xr-x 1 onlyone admin 31 12 14 17:31 node -&gt; ..&#x2F;Cellar&#x2F;node&#x2F;13.12.0&#x2F;bin&#x2F;nodelrwxr-xr-x 1 onlyone admin 33 12 14 17:54 hexo -&gt; ..&#x2F;lib&#x2F;node_modules&#x2F;hexo&#x2F;bin&#x2F;hexolrwxr-xr-x 1 onlyone admin 38 12 15 21:33 npm -&gt; ..&#x2F;lib&#x2F;node_modules&#x2F;npm&#x2F;bin&#x2F;npm-cli.jslrwxr-xr-x 1 onlyone admin 38 12 15 21:33 npx -&gt; ..&#x2F;lib&#x2F;node_modules&#x2F;npm&#x2F;bin&#x2F;npx-cli.js&#x2F;如上 telnet的命令存储于&#x2F;usr&#x2F;local&#x2F;bin&#x2F;telnet目录下GENGKAIYU-MB0:gblog onlyone$ which telnet&#x2F;usr&#x2F;local&#x2F;bin&#x2F;telnet whereis与which类似，只不过它的查找范围更广，不通过PATH变量进行查找，通过文件索引进行查找 12345[root@iz2ze0ldeq21cpwq3l04yzz ~]# whereis lsls: &#x2F;usr&#x2F;bin&#x2F;ls &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;ls.1.gz[root@iz2ze0ldeq21cpwq3l04yzz ~]# which lsalias ls&#x3D;&#39;ls --color&#x3D;auto&#39; &#x2F;usr&#x2F;bin&#x2F;ls","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://onlygky.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://onlygky.github.io/tags/Linux/"}]}],"categories":[{"name":"服务端开发","slug":"服务端开发","permalink":"https://onlygky.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91/"},{"name":"操作系统","slug":"操作系统","permalink":"https://onlygky.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://onlygky.github.io/tags/Java/"},{"name":"个人","slug":"个人","permalink":"https://onlygky.github.io/tags/%E4%B8%AA%E4%BA%BA/"},{"name":"Linux","slug":"Linux","permalink":"https://onlygky.github.io/tags/Linux/"}]}